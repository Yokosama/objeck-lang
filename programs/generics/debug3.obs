#~
	testing:
		* arrays
		* strict type to type matching
~#

class Test {
	function : Main(args : String[]) ~ Nil {
#		b : Bar<String>;
		b : Bar[]<String> := Bar->New[3]<String>;	
		b[0] := Bar->New("Foo")<String>;				
		b[1] := Bar->New()<IntHolder>;

#~		
		x : Bar<Compare> := Bar->New(IntHolder->New(13))<IntHolder>;

		
		b[1]->Set(IntHolder->New(225));

		b[1]->Get()->Get()->PrintLine();
		b[0]->Get()->Get()->PrintLine();
~#
	}
}

class Bar<V> {
	@v : V;
	
	New() {}

	New(v : V) {
		@v := v;
	}

	function : Instance() ~ Bar {
		return Bar->New()<V>;
	}
	
	method : public : Set(v : V) ~ Nil {
		@v := v;
	}
	
	method : public : Get() ~ V {
		return @v;
	}
}